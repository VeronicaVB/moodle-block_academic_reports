{"version":3,"file":"FileSaver.min.js","sources":["../src/FileSaver.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.FileSaver = mod.exports;\n  }\n})(this, function () {\n  \"use strict\";\n\n  /*\n  * FileSaver.js\n  * A saveAs() FileSaver implementation.\n  *\n  * By Eli Grey, http://eligrey.com\n  *\n  * License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n  * source  : http://purl.eligrey.com/github/FileSaver.js\n  */\n  // The one and only way of getting global scope in all environments\n  // https://stackoverflow.com/q/3277182/1008999\n  var _global = typeof window === 'object' && window.window === window ? window : typeof self === 'object' && self.self === self ? self : typeof global === 'object' && global.global === global ? global : void 0;\n\n  function bom(blob, opts) {\n    if (typeof opts === 'undefined') opts = {\n      autoBom: false\n    }; else if (typeof opts !== 'object') {\n      console.warn('Deprecated: Expected third argument to be a object');\n      opts = {\n        autoBom: !opts\n      };\n    } // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\n    if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n      return new Blob([String.fromCharCode(0xFEFF), blob], {\n        type: blob.type\n      });\n    }\n\n    return blob;\n  }\n\n  function download(url, name, opts) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n\n    xhr.onload = function () {\n      saveAs(xhr.response, name, opts);\n    };\n\n    xhr.onerror = function () {\n      console.error('could not download file');\n    };\n\n    xhr.send();\n  }\n\n  function corsEnabled(url) {\n    var xhr = new XMLHttpRequest(); // use sync to avoid popup blocker\n\n    xhr.open('HEAD', url, false);\n\n    try {\n      xhr.send();\n    } catch (e) { }\n\n    return xhr.status >= 200 && xhr.status <= 299;\n  } // `a.click()` doesn't work for all browsers (#465)\n\n\n  function click(node) {\n    try {\n      node.dispatchEvent(new MouseEvent('click'));\n    } catch (e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n      node.dispatchEvent(evt);\n    }\n  } // Detect WebView inside a native macOS app by ruling out all browsers\n  // We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n  // https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\n\n\n  var isMacOSWebView = /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent);\n  var saveAs = _global.saveAs || ( // probably in some web worker\n    typeof window !== 'object' || window !== _global ? function saveAs() { }\n      /* noop */\n      // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n      : 'download' in HTMLAnchorElement.prototype && !isMacOSWebView ? function saveAs(blob, name, opts) {\n        var URL = _global.URL || _global.webkitURL;\n        var a = document.createElement('a');\n        name = name || blob.name || 'download';\n        a.download = name;\n        a.rel = 'noopener'; // tabnabbing\n        // TODO: detect chrome extensions & packaged apps\n        // a.target = '_blank'\n\n        if (typeof blob === 'string') {\n          // Support regular links\n          a.href = blob;\n\n          if (a.origin !== location.origin) {\n            corsEnabled(a.href) ? download(blob, name, opts) : click(a, a.target = '_blank');\n          } else {\n            click(a);\n          }\n        } else {\n          // Support blobs\n          a.href = URL.createObjectURL(blob);\n          setTimeout(function () {\n            URL.revokeObjectURL(a.href);\n          }, 4E4); // 40s\n\n          setTimeout(function () {\n            click(a);\n          }, 0);\n        }\n      } // Use msSaveOrOpenBlob as a second approach\n        : 'msSaveOrOpenBlob' in navigator ? function saveAs(blob, name, opts) {\n          name = name || blob.name || 'download';\n\n          if (typeof blob === 'string') {\n            if (corsEnabled(blob)) {\n              download(blob, name, opts);\n            } else {\n              var a = document.createElement('a');\n              a.href = blob;\n              a.target = '_blank';\n              setTimeout(function () {\n                click(a);\n              });\n            }\n          } else {\n            navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n          }\n        } // Fallback to using FileReader and a popup\n          : function saveAs(blob, name, opts, popup) {\n            // Open a popup immediately do go around popup blocker\n            // Mostly only available on user interaction and the fileReader is async so...\n            popup = popup || open('', '_blank');\n\n            if (popup) {\n              popup.document.title = popup.document.body.innerText = 'downloading...';\n            }\n\n            if (typeof blob === 'string') return download(blob, name, opts);\n            var force = blob.type === 'application/octet-stream';\n\n            var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari;\n\n            var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n            if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== 'undefined') {\n              // Safari doesn't allow downloading of blob URLs\n              var reader = new FileReader();\n\n              reader.onloadend = function () {\n                var url = reader.result;\n                url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n                if (popup) popup.location.href = url; else location = url;\n                popup = null; // reverse-tabnabbing #460\n              };\n\n              reader.readAsDataURL(blob);\n            } else {\n              var URL = _global.URL || _global.webkitURL;\n              var url = URL.createObjectURL(blob);\n              if (popup) popup.location = url; else location.href = url;\n              popup = null; // reverse-tabnabbing #460\n\n              setTimeout(function () {\n                URL.revokeObjectURL(url);\n              }, 4E4); // 40s\n            }\n          });\n  _global.saveAs = saveAs.saveAs = saveAs;\n\n  if (typeof module !== 'undefined') {\n    module.exports = saveAs;\n  }\n});\n"],"names":["global","factory","define","amd","exports","FileSaver","this","_global","window","self","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","isMacOSWebView","test","navigator","userAgent","HTMLAnchorElement","prototype","blob","URL","webkitURL","a","createElement","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","type","Blob","String","fromCharCode","bom","popup","title","body","innerText","force","isSafari","HTMLElement","safari","isChromeIOS","FileReader","reader","onloadend","result","replace","readAsDataURL","module"],"mappings":"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"}